// <auto-generated />
using System;
using KanbanBoard.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanbanBoard.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231224222130_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("KanbanBoard.Database.Entities.CardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ActiveListId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("active_list_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("deleted_on");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER")
                        .HasColumnName("priority");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_on");

                    b.HasKey("Id");

                    b.HasIndex("ActiveListId");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("KanbanBoard.Database.Entities.CardHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("card_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_on");

                    b.Property<int?>("MovedSourceListId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("moved_source_list_id");

                    b.Property<int?>("MovedTargetListId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("moved_target_list_id");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("card_histories");
                });

            modelBuilder.Entity("KanbanBoard.Database.Entities.ListEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("closed_on");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_closed");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_on");

                    b.HasKey("Id");

                    b.ToTable("lists");
                });

            modelBuilder.Entity("KanbanBoard.Database.Entities.CardEntity", b =>
                {
                    b.HasOne("KanbanBoard.Database.Entities.ListEntity", "ActiveList")
                        .WithMany("Cards")
                        .HasForeignKey("ActiveListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveList");
                });

            modelBuilder.Entity("KanbanBoard.Database.Entities.CardHistoryEntity", b =>
                {
                    b.HasOne("KanbanBoard.Database.Entities.CardEntity", "Card")
                        .WithMany("CardHistories")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("KanbanBoard.Database.Entities.CardEntity", b =>
                {
                    b.Navigation("CardHistories");
                });

            modelBuilder.Entity("KanbanBoard.Database.Entities.ListEntity", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
